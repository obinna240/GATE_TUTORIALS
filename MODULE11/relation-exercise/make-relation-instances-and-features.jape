Phase: instances

Input: Sentence

Options: control = all


Rule: pair
({Sentence}):s
-->
{

   // Get the sentence
   Annotation sent = ((AnnotationSet)bindings.get("s")).iterator().next();

   // Get all Organizations and Persons in this sentence
   Long sentStart = sent.getStartNode().getOffset();
   Long sentEnd = sent.getEndNode().getOffset();
   AnnotationSet orgs = inputAS.get("Organization", sentStart, sentEnd);
   AnnotationSet pers = inputAS.get("Person", sentStart, sentEnd);

   // for each Person, consider each Organization
   for(Annotation p : pers) {
     for(Annotation o : orgs) {

       gate.FeatureMap fm = gate.Factory.newFeatureMap();

       // Find the left and right boundaries of the instance
       Long pStart = p.getStartNode().getOffset();
       Long oStart = o.getStartNode().getOffset();
       Long pEnd = p.getEndNode().getOffset();
       Long oEnd = o.getEndNode().getOffset();
       Long left = (pStart < oStart) ? pStart : oStart; 
       Long right = (pEnd > oEnd) ? pEnd : oEnd; 
    
       // order feature
       String order = (pStart < oStart) ? "pers-org" : "org-pers";
       fm.put("order",order);

       // Get the tokens between the arguments, for other features
       Long posListLeft = (pStart < oStart) ? pEnd : oEnd; 
       Long posListRight = (pEnd > oEnd) ? pStart : oStart; 
       AnnotationSet toks = inputAS.get("Token", posListLeft, posListRight);
       List<Annotation> orderedToks = gate.Utils.inDocumentOrder(toks);

       // Distance feature
       fm.put("distance",orderedToks.size());

       // POS list feature and generalised POS list feature
       String posString = "";
       String genposString = "";
       for(Annotation a : orderedToks){
         if(!posString.equals("")) posString = posString + "-";
         if(!genposString.equals("")) genposString = genposString + "-";
         posString = posString + a.getFeatures().get("category");
         genposString = genposString
           + org.apache.commons.lang.StringUtils.substring(
               a.getFeatures().get("category").toString(),0,2);
       }
       fm.put("poslist",posString);
       fm.put("genposlist",genposString);

       // Create the instance
       fm.put("pers-id",p.getId().toString());
       fm.put("org-id",o.getId().toString());
       try{
         outputAS.add(left, right, "RelationInstance", fm);
       }catch(Exception e){
    
       }

     }
   }

}




